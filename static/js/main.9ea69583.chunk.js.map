{"version":3,"sources":["constants.js","components/Card/Card.js","components/util.js","components/Map/CircleMap.js","components/Charts/Chart.js","components/Table/Table.js","App.js","index.js"],"names":["latlong","statecode","name","lat","long","StatusCard","title","isColor1","isColor2","isColor3","isColor4","cases","active","onClick","Card","className","CardContent","Typography","color","prettyNumber","stat","numeral","format","casesTypeValues","multiplier","confirmed","recovered","deaths","CircleMap","casesType","center","mapData","key","zoom","maxZoom","doubleClickZoom","scrollWheelZoom","dragging","animate","minZoom","attributionControl","bounds","TileLayer","url","attribution","data","map","state","i","Circle","lng","fillOpacity","stroke","fillColor","radius","Math","sqrt","Popup","showCirclesOnMap","options","bezierCurve","legend","display","responsive","maintainAspectRatio","scales","xAxes","ticks","gridLines","drawBorder","yAxes","Charts","lineChart1","cases_time_series","labels","date","datasets","dailydeceased","label","borderColor","fill","backgroundColor","borderWidth","text","fontSize","position","lineChart2","dailyconfirmed","lineChart3","dailyrecovered","inrformat","require","useStyles","makeStyles","tablecontainer","borderRadius","boxShadow","marginBottom","marginTop","height","oddRow","evenRow","headerColumns","id","align","value","toLocaleString","StateInfoTable","states","classes","TableContainer","Table","stickyHeader","aria-aria-label","TableHead","TableRow","column","TableCell","TableBody","random","style","App","useState","setData","window","innerWidth","windowWidth","setWindowWidth","setStatesData","selectedState","setSelectedState","selectedStateInfo","setSelectedStateInfo","setCasesType","mapCenter","setMapCenter","handleResize","e","useEffect","addEventListener","fetch","then","response","json","DataofStates","statewise","length","j","temp","push","countrySelect","FormControl","Select","variant","onChange","event","stateCodeOfSelectedState","target","console","log","stateData","filter","MenuItem","FormHelperText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAAaA,EAAU,CACrB,CAAEC,UAAW,KAAMC,KAAM,QAASC,IAAK,UAAWC,KAAM,WACxD,CACEH,UAAW,KACXC,KAAM,cACNC,IAAK,OACLC,KAAM,SAER,CACEH,UAAW,KACXC,KAAM,iBACNC,IAAK,WACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,YACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,aACNC,IAAK,QACLC,KAAM,SAER,CACEH,UAAW,KACXC,KAAM,gBACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,QACNC,IAAK,WACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,cACNC,IAAK,YACLC,KAAM,aAER,CAAEH,UAAW,KAAMC,KAAM,SAAUC,IAAK,SAAUC,KAAM,WACxD,CACEH,UAAW,KACXC,KAAM,SACNC,IAAK,OACLC,KAAM,SAER,CACEH,UAAW,KACXC,KAAM,YACNC,IAAK,QACLC,KAAM,SAER,CACEH,UAAW,KACXC,KAAM,QACNC,IAAK,QACLC,KAAM,SAER,CAAEH,UAAW,KAAMC,KAAM,QAASC,IAAK,UAAWC,KAAM,WAExD,CAAEH,UAAW,KAAMC,KAAM,UAAWC,IAAK,UAAWC,KAAM,UAC1D,CACEH,UAAW,KACXC,KAAM,YACNC,IAAK,QACLC,KAAM,SAER,CACEH,UAAW,KACXC,KAAM,iBACNC,IAAK,QACLC,KAAM,SAER,CACEH,UAAW,KACXC,KAAM,UACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,eACNC,IAAK,UACLC,KAAM,WAER,CACEH,UAAW,KACXC,KAAM,SACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,YACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,oBACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,cACNC,IAAK,QACLC,KAAM,SAER,CAAEH,UAAW,KAAMC,KAAM,MAAOC,IAAK,UAAWC,KAAM,aACtD,CACEH,UAAW,KACXC,KAAM,aACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,UACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,mBACNC,IAAK,YACLC,KAAM,WAER,CACEH,UAAW,KACXC,KAAM,aACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,UACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,oBACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,WACNC,IAAK,WACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,YACNC,IAAK,YACLC,KAAM,YAER,CAAEH,UAAW,KAAMC,KAAM,SAAUC,IAAK,UAAWC,KAAM,WACzD,CACEH,UAAW,KACXC,KAAM,8BACNC,IAAK,YACLC,KAAM,aAER,CACEH,UAAW,KACXC,KAAM,2CACNC,IAAK,YACLC,KAAM,YAER,CACEH,UAAW,KACXC,KAAM,SACNC,IAAK,WACLC,KAAM,YAER,CACEH,UAAW,KACXC,KAAM,UACNC,IAAK,YACLC,KAAM,aAER,CAAEH,UAAW,KAAMC,KAAM,mBAAoBC,IAAK,EAAGC,KAAM,GAC3D,CACEH,UAAW,KACXC,KAAM,cACNC,IAAK,YACLC,KAAM,c,yCC3LK,SAASC,EAAT,GASX,IARFC,EAQC,EARDA,MACAC,EAOC,EAPDA,SACAC,EAMC,EANDA,SACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,OACAC,EACC,EADDA,QAEA,OACE,kBAACC,EAAA,EAAD,CACED,QAASA,EACTE,UAAS,eAAUH,GAAU,iBAApB,oBACNJ,GAAY,eADN,mBAEPC,GAAY,eAFL,mBAGPC,GAAY,iBAEd,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYF,UAAU,aAAaG,MAAM,iBACtCZ,GAEH,wBACES,UAAS,kBACXR,GAAY,cADD,mBAEXC,GAAY,cAFD,mBAGXC,GAAY,cAHD,mBAIXC,GAAY,gBAETC,K,yDC/BEQ,EAAe,SAACC,GAAD,OAC1BA,EAAI,UAAMC,IAAQD,GAAME,OAAO,OAAU,MAErCC,EAAkB,CACtBX,OAAQ,CACNM,MAAO,UACPM,WAAY,KAEdC,UAAW,CACTP,MAAO,UACPM,WAAY,KAEdE,UAAW,CACTR,MAAO,UACPM,WAAY,KAEdG,OAAQ,CACNT,MAAO,UACPM,WAAY,O,OCkBDI,MA7Bf,YAAoD,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QACtC,OACE,yBAAKhB,UAAU,OACb,kBAAC,IAAD,CACEiB,IAAI,OACJF,OAAQA,EACRG,KAZK,EAaLC,QAAS,GACTC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAU,EACVC,SAAS,EACTC,QAAS,EACTC,oBAAoB,EACpBC,OAAQ,CACN,CApBK,QAEC,UAmBN,CApBK,UAEC,aAqBR,kBAACC,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,2NDPU,SAACC,GAAD,IAAOhB,EAAP,uDAAmB,SAAnB,OAC9BgB,EAAKC,KAAI,SAACC,EAAOC,GACf,MAAwB,OAApBD,EAAM9C,UAEN,kBAACgD,EAAA,EAAD,CACEjB,IAAKgB,EACLlB,OAAQ,CAACiB,EAAM5C,IAAK4C,EAAMG,KAC1BC,YAAa,GACbC,QAAQ,EACRlC,MAAOK,EAAgBM,GAAWX,MAClCmC,UAAW9B,EAAgBM,GAAWX,MACtCoC,OACEC,KAAKC,KAAKT,EAAMlB,IAAcN,EAAgBM,GAAWL,YAG3D,kBAACiC,EAAA,EAAD,CAAOzB,IAAKe,EAAM9C,WAChB,yBAAKc,UAAU,kBACb,yBAAKA,UAAU,aAAagC,EAAMA,OAClC,yBAAKhC,UAAU,eAAf,UAAqCgC,EAAMnC,QAC3C,yBAAKG,UAAU,kBAAf,aAA2CgC,EAAMtB,WACjD,yBAAKV,UAAU,kBAAf,aAA2CgC,EAAMrB,WACjD,yBAAKX,UAAU,eAAf,WAAsCgC,EAAMpB,WAM7C,iCClBJ+B,CAAiB3B,EAASF,M,iBC9B7B8B,G,OAAU,CACdC,aAAa,EACbC,OAAQ,CACNC,SAAS,GAEXC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLL,SAAS,GAEXM,UAAW,CACTN,SAAS,EACTO,YAAY,KAIlBC,MAAO,CACL,CACEH,MAAO,CAAEL,SAAS,GAClBM,UAAW,CACTN,SAAS,EACTO,YAAY,QAqGPE,EA9FA,SAAC,GAAc,IAAZ1B,EAAW,EAAXA,KACV2B,EAAa3B,EAAK4B,kBACtB,kBAAC,OAAD,CACE5B,KAAM,CACJ6B,OAAQ7B,EAAK4B,kBAAkB3B,KAAI,qBAAG6B,QACtCC,SAAU,CACR,CACE/B,KAAMA,EAAK4B,kBAAkB3B,KAC3B,qBAAG+B,iBAELC,MAAO,SACPC,YAAa,UACbC,MAAM,EACNC,gBAAiB,yBACjBC,YAAa,KAInBvB,QAAO,2BACFA,GADE,IAELrD,MAAO,CACLwD,SAAS,EACTqB,KAAM,iBACNC,SAAU,GACVC,SAAU,YAId,KACEC,EAAazC,EAAK4B,kBACtB,kBAAC,OAAD,CACE5B,KAAM,CACJ6B,OAAQ7B,EAAK4B,kBAAkB3B,KAAI,qBAAG6B,QACtCC,SAAU,CACR,CACE/B,KAAMA,EAAK4B,kBAAkB3B,KAC3B,qBAAGyC,kBAELT,MAAO,WACPC,YAAa,UACbE,gBAAiB,yBACjBC,YAAa,EACbF,MAAM,KAIZrB,QAAO,2BACFA,GADE,IAELrD,MAAO,CACLwD,SAAS,EACTqB,KAAM,kBACNC,SAAU,GACVC,SAAU,YAId,KACEG,EAAa3C,EAAK4B,kBACtB,kBAAC,OAAD,CACE5B,KAAM,CACJ6B,OAAQ7B,EAAK4B,kBAAkB3B,KAAI,qBAAG6B,QACtCC,SAAU,CACR,CACE/B,KAAMA,EAAK4B,kBAAkB3B,KAC3B,qBAAG2C,kBAELX,MAAO,YACPC,YAAa,UACbC,MAAM,EACNC,gBAAiB,yBACjBC,YAAa,KAInBvB,QAAO,2BACFA,GADE,IAELrD,MAAO,CACLwD,SAAS,EACTqB,KAAM,kBACNC,SAAU,GACVC,SAAU,YAId,KAEJ,OACE,yBAAKtE,UAAU,mBACb,yBAAKA,UAAU,SAASyD,GACxB,yBAAKzD,UAAU,SAASuE,GACxB,yBAAKvE,UAAU,SAASyE,K,+DCrHxBE,EAAYC,EAAQ,KAEpBC,EAAYC,YAAW,CAC3BC,eAAgB,CACdb,gBAAiB,QACjBc,aAAc,GACdC,UAAW,kCACXC,aAAc,GACdC,UAAW,GACXC,OAAQ,KAEVC,OAAQ,CACNnB,gBAAiB,WAEnBoB,QAAS,CACPpB,gBAAiB,aAIfqB,EAAgB,CACpB,CAAEC,GAAI,QAASzB,MAAO,QAAS0B,MAAO,QACtC,CAAED,GAAI,OAAQzB,MAAO,YAAa0B,MAAO,UACzC,CACED,GAAI,SACJzB,MAAO,SAEP0B,MAAO,SACPlF,OAAQ,SAACmF,GAAD,OAAWA,EAAMC,eAAe,WAE1C,CACEH,GAAI,YACJzB,MAAO,YAEP0B,MAAO,SACPlF,OAAQ,SAACmF,GAAD,OAAWA,EAAMC,eAAe,WAE1C,CACEH,GAAI,YACJzB,MAAO,YACP0B,MAAO,SACPlF,OAAQ,SAACmF,GAAD,OAAWA,EAAMC,eAAe,WAE1C,CACEH,GAAI,SACJzB,MAAO,WACP0B,MAAO,SACPlF,OAAQ,SAACmF,GAAD,OAAWA,EAAMC,eAAe,YAI7B,SAASC,EAAT,GAAqC,IAAXC,EAAU,EAAVA,OACjCC,EAAUjB,IACZ5C,EAAI,EACR,OACE,kBAAC8D,EAAA,EAAD,CAAgB/F,UAAW8F,EAAQf,gBACjC,kBAACiB,EAAA,EAAD,CAAOC,cAAY,EAACC,kBAAgB,gBAClC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGb,EAAcxD,KAAI,SAACsE,GAAD,OACjB,kBAACC,EAAA,EAAD,CAAWrF,IAAKoF,EAAOb,GAAIC,MAAOY,EAAOZ,OACtCY,EAAOtC,YAKhB,kBAACwC,EAAA,EAAD,KACGV,EAAO9D,KAAI,SAACC,GACX,OACE,kBAACoE,EAAA,EAAD,CACEnF,IAAKuB,KAAKgE,SAAWhE,KAAKgE,SAC1BxG,UAAWiC,IAAM,EAAI6D,EAAQT,OAASS,EAAQR,SAE9C,kBAACgB,EAAA,EAAD,CACErF,IAAKe,EAAMA,MACXyD,MAAM,OACNgB,MAAO,CAAEzB,aAAc,KAEtBhD,EAAMA,OAET,kBAACsE,EAAA,EAAD,CACErF,IAAKe,EAAM9C,UACXuG,MAAM,SACNgB,MAAO,CAAEzB,aAAc,KAEtBhD,EAAM9C,WAET,kBAACoH,EAAA,EAAD,CACErF,IAAKuB,KAAKgE,SAAWhE,KAAKgE,SAC1Bf,MAAM,SACNgB,MAAO,CAAEzB,aAAc,KAEtBL,EAAU3C,EAAMnC,SAEnB,kBAACyG,EAAA,EAAD,CACErF,IAAKuB,KAAKgE,SAAWhE,KAAKgE,SAC1Bf,MAAM,SACNgB,MAAO,CAAEzB,aAAc,KAEtBL,EAAU3C,EAAMtB,YAEnB,kBAAC4F,EAAA,EAAD,CACErF,IAAKuB,KAAKgE,SAAWhE,KAAKgE,SAC1Bf,MAAM,SACNgB,MAAO,CAAEzB,aAAc,KAEtBL,EAAU3C,EAAMrB,YAEnB,kBAAC2F,EAAA,EAAD,CACErF,IAAKuB,KAAKgE,SAAWhE,KAAKgE,SAC1Bf,MAAM,SACNgB,MAAO,CAAEzB,aAAc,KAEtBL,EAAU3C,EAAMpB,gBCoCpB8F,MA/If,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACN7E,EADM,KACA8E,EADA,OAEmBD,mBAAS,IAF5B,gCAGyBA,mBAASE,OAAOC,aAHzC,mBAGNC,EAHM,KAGOC,EAHP,OAImBL,mBAAS,IAJ5B,mBAINd,EAJM,KAIEoB,EAJF,OAK6BN,mBAAS,MALtC,mBAKNO,EALM,KAKSC,EALT,OAMqCR,mBAAS,IAN9C,mBAMNS,EANM,KAMaC,EANb,OAOqBV,mBAAS,UAP9B,mBAON7F,EAPM,KAOKwG,EAPL,OAQqBX,mBAAS,CAAC,UAAW,YAR1C,mBAQNY,EARM,KAQKC,EARL,KAUPC,EAAe,SAACC,GACpBV,EAAeH,OAAOC,aAExBa,qBAAU,WACRd,OAAOe,iBAAiB,SAAUH,MAGpCE,qBAAU,WACRE,MAAM,0CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChG,GACL8E,EAAQ9E,GAER,IADA,IAAImG,EAAe,GACVhG,EAAI,EAAGA,EAAIH,EAAKoG,UAAUC,OAAQlG,IACzC,IAAK,IAAImG,EAAI,EAAGA,EAAInJ,EAAQkJ,OAAQC,IAClC,GAAItG,EAAKoG,UAAUjG,GAAG/C,YAAcD,EAAQmJ,GAAGlJ,UAAW,CACxD,IAAImJ,EAAI,2BACHvG,EAAKoG,UAAUjG,IADZ,IAEN7C,IAAKH,EAAQgD,GAAG7C,IAChB+C,IAAKlD,EAAQgD,GAAG5C,KAChBF,KAAMF,EAAQgD,GAAG9C,OAEnB8I,EAAaK,KAAKD,GAIxBpB,EAAcgB,GACdZ,EAAqBY,EAAa,SAErC,IAEH,IAWMM,EACJ,kBAACC,EAAA,EAAD,CAAaxI,UAAU,gBACrB,kBAACyI,EAAA,EAAD,CACEzI,UAAU,aACV0I,QAAQ,WACRhD,MAAOwB,EACPyB,SAjBgB,SAACC,GACrB,IAAMC,EAA2BD,EAAME,OAAOpD,MAC9CyB,EAAiB0B,GACjBE,QAAQC,IAAI,kBAAmBH,GAC/B,IAAMI,EAAYpD,EAAOqD,QAAO,SAAClH,GAC/B,OAAOA,EAAM9C,YAAc2J,KAC1B,GACHxB,EAAqB4B,GACrBzB,EAAa,CAACyB,EAAU7J,IAAK6J,EAAU9G,QAWlC0D,EAAO9D,KAAI,SAACC,GAAD,OACV,kBAACmH,EAAA,EAAD,CAAUlI,IAAKe,EAAM9C,UAAWwG,MAAO1D,EAAM9C,WAC1C8C,EAAM7C,UAIb,kBAACiK,EAAA,EAAD,gCAIJ,OACE,yBAAKpJ,UAAU,OACb,yBAAKA,UAAU,cACb,oDAEF,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,oBAAoBuI,GACnC,yBAAKvI,UAAU,cACb,kBAACV,EAAD,CACEQ,QAAS,SAAC4H,GAAD,OAAOJ,EAAa,WAC7B/H,MAAM,SACNM,OAAqB,UAAbiB,EACRtB,UAAU,EACVI,MACEmH,EAAc,IACV3G,EAAagH,EAAkBvH,QAC/BuH,EAAkBvH,SAG1B,kBAACP,EAAD,CACEO,OAAqB,aAAbiB,EACRrB,UAAU,EACVK,QAAS,SAAC4H,GAAD,OAAOJ,EAAa,cAC7B/H,MAAM,YACNK,MACEmH,EAAc,IACV3G,EAAagH,EAAkB1G,WAC/B0G,EAAkB1G,YAG1B,kBAACpB,EAAD,CACEO,OAAqB,aAAbiB,EACRpB,UAAU,EACVI,QAAS,SAAC4H,GAAD,OAAOJ,EAAa,cAC7B/H,MAAM,YACNK,MACEmH,EAAc,IACV3G,EAAagH,EAAkBzG,WAC/ByG,EAAkBzG,YAG1B,kBAACrB,EAAD,CACEO,OAAqB,UAAbiB,EACRnB,UAAU,EACVG,QAAS,SAAC4H,GAAD,OAAOJ,EAAa,WAC7B/H,MAAM,SACNK,MACEmH,EAAc,IACV3G,EAAagH,EAAkBxG,QAC/BwG,EAAkBxG,UAI5B,kBAAC,EAAD,CACEG,OAAQwG,EACRzG,UAAWA,EACXE,QAAS6E,KAGb,yBAAK7F,UAAU,YACb,kBAAC,EAAD,CAAQ8B,KAAMA,MAGlB,yBAAK9B,UAAU,kBACb,kBAAC4F,EAAD,CAAgBC,OAAQA,QChJlCwD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9ea69583.chunk.js","sourcesContent":["export const latlong = [\r\n  { statecode: \"TT\", name: \"Total\", lat: 24.070541, long: 83.003948 },\r\n  {\r\n    statecode: \"MH\",\r\n    name: \"Maharashtra\",\r\n    lat: 19.076,\r\n    long: 72.8777,\r\n  },\r\n  {\r\n    statecode: \"AP\",\r\n    name: \"Andhra Pradesh\",\r\n    lat: 14.7504291,\r\n    long: 78.57002559,\r\n  },\r\n  {\r\n    statecode: \"KA\",\r\n    name: \"Karnataka\",\r\n    lat: 12.57038129,\r\n    long: 76.91999711,\r\n  },\r\n  {\r\n    statecode: \"TN\",\r\n    name: \"Tamil Nadu\",\r\n    lat: 13.0827,\r\n    long: 80.2707,\r\n  },\r\n  {\r\n    statecode: \"UP\",\r\n    name: \"Uttar Pradesh\",\r\n    lat: 27.59998069,\r\n    long: 78.05000565,\r\n  },\r\n  {\r\n    statecode: \"DL\",\r\n    name: \"Delhi\",\r\n    lat: 28.6699929,\r\n    long: 77.23000403,\r\n  },\r\n  {\r\n    statecode: \"WB\",\r\n    name: \"West Bengal\",\r\n    lat: 22.58039044,\r\n    long: 88.32994665,\r\n  },\r\n  { statecode: \"OR\", name: \"Odisha\", lat: 20.94092, long: 84.803467 },\r\n  {\r\n    statecode: \"KL\",\r\n    name: \"Kerala\",\r\n    lat: 8.5241,\r\n    long: 76.9366,\r\n  },\r\n  {\r\n    statecode: \"TG\",\r\n    name: \"Telangana\",\r\n    lat: 18.1124,\r\n    long: 79.0193,\r\n  },\r\n  {\r\n    statecode: \"BR\",\r\n    name: \"Bihar\",\r\n    lat: 25.5941,\r\n    long: 85.1376,\r\n  },\r\n  { statecode: \"AS\", name: \"Assam\", lat: 26.244156, long: 92.537842 },\r\n\r\n  { statecode: \"GJ\", name: \"Gujarat\", lat: 22.309425, long: 72.13623 },\r\n  {\r\n    statecode: \"RJ\",\r\n    name: \"Rajasthan\",\r\n    lat: 25.9124,\r\n    long: 73.7873,\r\n  },\r\n  {\r\n    statecode: \"MP\",\r\n    name: \"Madhya Pradesh\",\r\n    lat: 23.2599,\r\n    long: 77.4126,\r\n  },\r\n  {\r\n    statecode: \"HR\",\r\n    name: \"Haryana\",\r\n    lat: 28.45000633,\r\n    long: 77.01999101,\r\n  },\r\n  {\r\n    statecode: \"CT\",\r\n    name: \"Chhattisgarh\",\r\n    lat: 21.295132,\r\n    long: 81.828232,\r\n  },\r\n  {\r\n    statecode: \"PB\",\r\n    name: \"Punjab\",\r\n    lat: 31.51997398,\r\n    long: 75.98000281,\r\n  },\r\n  {\r\n    statecode: \"JH\",\r\n    name: \"Jharkhand\",\r\n    lat: 23.80039349,\r\n    long: 86.41998572,\r\n  },\r\n  {\r\n    statecode: \"JK\",\r\n    name: \"Jammu and Kashmir\",\r\n    lat: 34.29995933,\r\n    long: 74.46665849,\r\n  },\r\n  {\r\n    statecode: \"UT\",\r\n    name: \"Uttarakhand\",\r\n    lat: 26.8467,\r\n    long: 80.9462,\r\n  },\r\n  { statecode: \"GA\", name: \"Goa\", lat: 15.491997, long: 73.81800065 },\r\n  {\r\n    statecode: \"PY\",\r\n    name: \"Puducherry\",\r\n    lat: 11.93499371,\r\n    long: 79.83000037,\r\n  },\r\n  {\r\n    statecode: \"TR\",\r\n    name: \"Tripura\",\r\n    lat: 23.83540428,\r\n    long: 91.27999914,\r\n  },\r\n  {\r\n    statecode: \"HP\",\r\n    name: \"Himachal Pradesh\",\r\n    lat: 31.10002545,\r\n    long: 77.571167,\r\n  },\r\n  {\r\n    statecode: \"CH\",\r\n    name: \"Chandigarh\",\r\n    lat: 30.71999697,\r\n    long: 77.16659704,\r\n  },\r\n  {\r\n    statecode: \"MN\",\r\n    name: \"Manipur\",\r\n    lat: 24.79997072,\r\n    long: 93.95001705,\r\n  },\r\n  {\r\n    statecode: \"AR\",\r\n    name: \"Arunachal Pradesh\",\r\n    lat: 27.10039878,\r\n    long: 93.61660071,\r\n  },\r\n  {\r\n    statecode: \"NL\",\r\n    name: \"Nagaland\",\r\n    lat: 25.6669979,\r\n    long: 94.11657019,\r\n  },\r\n  {\r\n    statecode: \"ML\",\r\n    name: \"Meghalaya\",\r\n    lat: 25.57049217,\r\n    long: 91.8800142,\r\n  },\r\n  { statecode: \"LA\", name: \"Ladakh\", lat: 34.209515, long: 77.615112 },\r\n  {\r\n    statecode: \"AN\",\r\n    name: \"Andaman and Nicobar Islands\",\r\n    lat: 11.66702557,\r\n    long: 92.73598262,\r\n  },\r\n  {\r\n    statecode: \"DN\",\r\n    name: \"Dadra and Nagar Haveli and Daman and Diu\",\r\n    lat: 20.26657819,\r\n    long: 73.0166178,\r\n  },\r\n  {\r\n    statecode: \"SK\",\r\n    name: \"Sikkim\",\r\n    lat: 27.3333303,\r\n    long: 88.6166475,\r\n  },\r\n  {\r\n    statecode: \"MZ\",\r\n    name: \"Mizoram\",\r\n    lat: 23.71039899,\r\n    long: 92.72001461,\r\n  },\r\n  { statecode: \"UN\", name: \"State Unassigned\", lat: 0, long: 0 },\r\n  {\r\n    statecode: \"LD\",\r\n    name: \"Lakshadweep\",\r\n    lat: 10.56257331,\r\n    long: 72.63686717,\r\n  },\r\n];\r\n","import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport default function StatusCard({\r\n  title,\r\n  isColor1,\r\n  isColor2,\r\n  isColor3,\r\n  isColor4,\r\n  cases,\r\n  active,\r\n  onClick,\r\n}) {\r\n  return (\r\n    <Card\r\n      onClick={onClick}\r\n      className={`card ${active && \"card--selected\"}\r\n       ${isColor2 && \"card--color2\"}\r\n      ${isColor3 && \"card--color3\"}\r\n      ${isColor4 && \"card--color4\"}`}\r\n    >\r\n      <CardContent>\r\n        <Typography className=\"card_title\" color=\"textSecondary\">\r\n          {title}\r\n        </Typography>\r\n        <h2\r\n          className={`\r\n      ${isColor1 && \"card_color1\"}\r\n      ${isColor2 && \"card_color2\"}\r\n      ${isColor3 && \"card_color3\"}\r\n      ${isColor4 && \"card_color4\"}`}\r\n        >\r\n          {cases}\r\n        </h2>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\nimport numeral from \"numeral\";\r\n\r\nexport const prettyNumber = (stat) =>\r\n  stat ? `${numeral(stat).format(\"0a\")}` : \"+0\";\r\n\r\nconst casesTypeValues = {\r\n  active: {\r\n    color: \"#a820ff\",\r\n    multiplier: 800,\r\n  },\r\n  confirmed: {\r\n    color: \"#3783ea\",\r\n    multiplier: 650,\r\n  },\r\n  recovered: {\r\n    color: \"#2c9947\",\r\n    multiplier: 650,\r\n  },\r\n  deaths: {\r\n    color: \"#e9113f\",\r\n    multiplier: 2400,\r\n  },\r\n};\r\nexport const showCirclesOnMap = (data, casesType = \"active\") =>\r\n  data.map((state, i) => {\r\n    if (state.statecode !== \"TT\") {\r\n      return (\r\n        <Circle\r\n          key={i}\r\n          center={[state.lat, state.lng]}\r\n          fillOpacity={0.3}\r\n          stroke={true}\r\n          color={casesTypeValues[casesType].color}\r\n          fillColor={casesTypeValues[casesType].color}\r\n          radius={\r\n            Math.sqrt(state[casesType]) * casesTypeValues[casesType].multiplier\r\n          }\r\n        >\r\n          <Popup key={state.statecode}>\r\n            <div className=\"info-container\">\r\n              <div className=\"info-name\">{state.state}</div>\r\n              <div className=\"info-active\">Active:{state.active}</div>\r\n              <div className=\"info-confirmed\">Recovered:{state.confirmed}</div>\r\n              <div className=\"info-recovered\">Recovered:{state.recovered}</div>\r\n              <div className=\"info-deaths\">Deaths: {state.deaths}</div>\r\n            </div>\r\n          </Popup>\r\n        </Circle>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  });\r\n","import React from \"react\";\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport { showCirclesOnMap } from \"../util\";\r\nimport \"./CircleMap.css\";\r\n\r\nconst zoom = 7;\r\nconst minLat = 27.1751;\r\nconst maxLat = 20.940737;\r\nconst minLong = 70.23846;\r\nconst maxLong = 93.781153;\r\n\r\nfunction CircleMap({ casesType, center, mapData }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap\r\n        key=\"maps\"\r\n        center={center}\r\n        zoom={zoom}\r\n        maxZoom={10}\r\n        doubleClickZoom={true}\r\n        scrollWheelZoom={true}\r\n        dragging={true}\r\n        animate={true}\r\n        minZoom={4}\r\n        attributionControl={true}\r\n        bounds={[\r\n          [minLat, minLong],\r\n          [maxLat, maxLong],\r\n        ]}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n        />\r\n        {showCirclesOnMap(mapData, casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CircleMap;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"./Chart.css\";\r\n\r\nconst options = {\r\n  bezierCurve: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        ticks: {\r\n          display: false,\r\n        },\r\n        gridLines: {\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: { display: false },\r\n        gridLines: {\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst Charts = ({ data }) => {\r\n  const lineChart1 = data.cases_time_series ? (\r\n    <Line\r\n      data={{\r\n        labels: data.cases_time_series.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: data.cases_time_series.map(\r\n              ({ dailydeceased }) => dailydeceased\r\n            ),\r\n            label: \"Deaths\",\r\n            borderColor: \"#ff3333\",\r\n            fill: true,\r\n            backgroundColor: \"rgba(218, 31, 31, 0.5)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        ...options,\r\n        title: {\r\n          display: true,\r\n          text: \"Deceased Cases\",\r\n          fontSize: 20,\r\n          position: \"left\",\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n  const lineChart2 = data.cases_time_series ? (\r\n    <Line\r\n      data={{\r\n        labels: data.cases_time_series.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: data.cases_time_series.map(\r\n              ({ dailyconfirmed }) => dailyconfirmed\r\n            ),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            backgroundColor: \"rgba(56, 56, 244, 0.5)\",\r\n            borderWidth: 1,\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        ...options,\r\n        title: {\r\n          display: true,\r\n          text: \"Confirmed Cases\",\r\n          fontSize: 20,\r\n          position: \"left\",\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n  const lineChart3 = data.cases_time_series ? (\r\n    <Line\r\n      data={{\r\n        labels: data.cases_time_series.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: data.cases_time_series.map(\r\n              ({ dailyrecovered }) => dailyrecovered\r\n            ),\r\n            label: \"Recovered\",\r\n            borderColor: \"#33ff33\",\r\n            fill: true,\r\n            backgroundColor: \"rgba(56, 244,56 , 0.5)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        ...options,\r\n        title: {\r\n          display: true,\r\n          text: \"Recovered Cases\",\r\n          fontSize: 20,\r\n          position: \"left\",\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <div className=\"chart\">{lineChart1}</div>\r\n      <div className=\"chart\">{lineChart2}</div>\r\n      <div className=\"chart\">{lineChart3}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Charts;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst inrformat = require(\"inrformat\");\r\n\r\nconst useStyles = makeStyles({\r\n  tablecontainer: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    boxShadow: \"0 0 8px -4px rgba(0, 0, 0, 0.5)\",\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n    height: 600,\r\n  },\r\n  oddRow: {\r\n    backgroundColor: \"#f3f2f8\",\r\n  },\r\n  evenRow: {\r\n    backgroundColor: \"#bdbdbd\",\r\n  },\r\n});\r\n\r\nconst headerColumns = [\r\n  { id: \"state\", label: \"State\", align: \"left\" },\r\n  { id: \"code\", label: \"StateCode\", align: \"center\" },\r\n  {\r\n    id: \"active\",\r\n    label: \"Active\",\r\n\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"confirmed\",\r\n    label: \"Confirmed\",\r\n\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n  {\r\n    id: \"recovered\",\r\n    label: \"Recovered\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n  {\r\n    id: \"deaths\",\r\n    label: \"Deceased\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n];\r\n\r\nexport default function StateInfoTable({ states }) {\r\n  const classes = useStyles();\r\n  let i = 0;\r\n  return (\r\n    <TableContainer className={classes.tablecontainer}>\r\n      <Table stickyHeader aria-aria-label=\"Sticky Table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {headerColumns.map((column) => (\r\n              <TableCell key={column.id} align={column.align}>\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {states.map((state) => {\r\n            return (\r\n              <TableRow\r\n                key={Math.random() / Math.random()}\r\n                className={i++ % 2 ? classes.oddRow : classes.evenRow}\r\n              >\r\n                <TableCell\r\n                  key={state.state}\r\n                  align=\"left\"\r\n                  style={{ borderRadius: 15 }}\r\n                >\r\n                  {state.state}\r\n                </TableCell>\r\n                <TableCell\r\n                  key={state.statecode}\r\n                  align=\"center\"\r\n                  style={{ borderRadius: 15 }}\r\n                >\r\n                  {state.statecode}\r\n                </TableCell>\r\n                <TableCell\r\n                  key={Math.random() / Math.random()}\r\n                  align=\"center\"\r\n                  style={{ borderRadius: 15 }}\r\n                >\r\n                  {inrformat(state.active)}\r\n                </TableCell>\r\n                <TableCell\r\n                  key={Math.random() / Math.random()}\r\n                  align=\"center\"\r\n                  style={{ borderRadius: 15 }}\r\n                >\r\n                  {inrformat(state.confirmed)}\r\n                </TableCell>\r\n                <TableCell\r\n                  key={Math.random() / Math.random()}\r\n                  align=\"center\"\r\n                  style={{ borderRadius: 15 }}\r\n                >\r\n                  {inrformat(state.recovered)}\r\n                </TableCell>\r\n                <TableCell\r\n                  key={Math.random() / Math.random()}\r\n                  align=\"center\"\r\n                  style={{ borderRadius: 15 }}\r\n                >\r\n                  {inrformat(state.deaths)}\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { latlong } from \"./constants\";\nimport \"leaflet/dist/leaflet.css\";\nimport StatusCard from \"./components/Card/Card\";\nimport CircleMap from \"./components/Map/CircleMap\";\nimport \"./App.css\";\nimport Charts from \"./components/Charts/Chart\";\nimport { prettyNumber } from \"./components/util\";\nimport StateInfoTable from \"./components/Table/Table\";\nfunction App() {\n  const [data, setData] = useState({});\n  const [darkMode, setDarkMode] = useState([]);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [states, setStatesData] = useState([]);\n  const [selectedState, setSelectedState] = useState(\"TT\");\n  const [selectedStateInfo, setSelectedStateInfo] = useState({});\n  const [casesType, setCasesType] = useState(\"active\");\n  const [mapCenter, setMapCenter] = useState([24.070541, 83.003948]);\n\n  const handleResize = (e) => {\n    setWindowWidth(window.innerWidth);\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n  });\n\n  useEffect(() => {\n    fetch(\"https://api.covid19india.org/data.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n        let DataofStates = [];\n        for (let i = 0; i < data.statewise.length; i++) {\n          for (let j = 0; j < latlong.length; j++) {\n            if (data.statewise[i].statecode === latlong[j].statecode) {\n              let temp = {\n                ...data.statewise[i],\n                lat: latlong[i].lat,\n                lng: latlong[i].long,\n                name: latlong[i].name,\n              };\n              DataofStates.push(temp);\n            }\n          }\n        }\n        setStatesData(DataofStates);\n        setSelectedStateInfo(DataofStates[0]);\n      });\n  }, []);\n\n  const onStateChange = (event) => {\n    const stateCodeOfSelectedState = event.target.value;\n    setSelectedState(stateCodeOfSelectedState);\n    console.log(\"statecode -----\", stateCodeOfSelectedState);\n    const stateData = states.filter((state) => {\n      return state.statecode === stateCodeOfSelectedState;\n    })[0];\n    setSelectedStateInfo(stateData);\n    setMapCenter([stateData.lat, stateData.lng]);\n  };\n\n  const countrySelect = (\n    <FormControl className=\"app_dropdown\">\n      <Select\n        className=\"app_select\"\n        variant=\"outlined\"\n        value={selectedState}\n        onChange={onStateChange}\n      >\n        {states.map((state) => (\n          <MenuItem key={state.statecode} value={state.statecode}>\n            {state.name}\n          </MenuItem>\n        ))}\n      </Select>\n      <FormHelperText>Select state from Here</FormHelperText>\n    </FormControl>\n  );\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_header\">\n        <h4>Wuhan Virus Tracker</h4>\n      </div>\n      <div className=\"app_body\">\n        <div className=\"app_right_left\">\n          <div className=\"app_right\">\n            <div className=\"app_right_select\">{countrySelect}</div>\n            <div className=\"app_status\">\n              <StatusCard\n                onClick={(e) => setCasesType(\"active\")}\n                title=\"Active\"\n                active={casesType == \"active\"}\n                isColor1={true}\n                cases={\n                  windowWidth < 770\n                    ? prettyNumber(selectedStateInfo.active)\n                    : selectedStateInfo.active\n                }\n              />\n              <StatusCard\n                active={casesType == \"confirmed\"}\n                isColor2={true}\n                onClick={(e) => setCasesType(\"confirmed\")}\n                title=\"Confirmed\"\n                cases={\n                  windowWidth < 770\n                    ? prettyNumber(selectedStateInfo.confirmed)\n                    : selectedStateInfo.confirmed\n                }\n              />\n              <StatusCard\n                active={casesType == \"recovered\"}\n                isColor3={true}\n                onClick={(e) => setCasesType(\"recovered\")}\n                title=\"Recovered\"\n                cases={\n                  windowWidth < 770\n                    ? prettyNumber(selectedStateInfo.recovered)\n                    : selectedStateInfo.recovered\n                }\n              />\n              <StatusCard\n                active={casesType == \"deaths\"}\n                isColor4={true}\n                onClick={(e) => setCasesType(\"deaths\")}\n                title=\"Deaths\"\n                cases={\n                  windowWidth < 770\n                    ? prettyNumber(selectedStateInfo.deaths)\n                    : selectedStateInfo.deaths\n                }\n              />\n            </div>\n            <CircleMap\n              center={mapCenter}\n              casesType={casesType}\n              mapData={states}\n            />\n          </div>\n          <div className=\"app_left\">\n            <Charts data={data} />\n          </div>\n        </div>\n        <div className=\"stateinfotable\">\n          <StateInfoTable states={states} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}